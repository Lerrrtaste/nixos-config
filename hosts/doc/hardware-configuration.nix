# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "nvme" "xhci_pci" "ahci" "usbhid" "usb_storage" "sd_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-amd" ];

# for webcam https://nixos.wiki/wiki/OBS_Studio
  boot.extraModulePackages = with config.boot.kernelPackages; [
    v4l2loopback
  ];
  boot.extraModprobeConfig = ''
    options v4l2loopback devices=1 video_nr=1 card_label="OBS Cam" exclusive_caps=1
  '';
  security.polkit.enable = true;

  #Filesystem
  fileSystems."/" =
    { device = "/dev/disk/by-uuid/f9f2ef72-11cc-4cc0-a6d9-78c519460c5e";
      fsType = "ext4";
    };

  boot.initrd.luks.devices."cryptroot".device = "/dev/disk/by-uuid/84b44021-237f-40ed-97aa-901305d5bd30";

  # boot.bootspec.enabled = false; # for secure boot


  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/F678-73E4";
      fsType = "vfat";
    };

  #fileSystems."/media/ssd" =
    #{ device = "/dev/disk/by-uuid/20549906-a63f-40db-ae3c-cd9f72eea2af";
    #  fsType = "ext4";
    #};

  # fileSystems."/media/storagebox/doc" =
  #   {
  #     fsType = "sshfs";
  #     device = "@sb-sub3-user@@@sb-host@";
  #     options = [ "password=@sb-sub3-pw@"
  #                 "allow_other" # allow users
  #                 "_netdev" # is network device
  #                 "nofail" # do not fail boot
  #                 "noauto" # do not mount at boot
  #                 "x-systemd.automount" # automount on demand

  #                 "reconnect" # reconnect on failure
  #                 "ServerAliveInterval=15" # keep alive
  #               ];
  #   };
  # system.activationScripts."storagebox-secrets" = ''
  #   sbpw=$(cat "${config.age.secrets.sb-sub3-pw.path}")
  #   sbuser=$(cat "${config.age.secrets.sb-sub3-user.path}")
  #   sbhost=$(cat "${config.age.secrets.sb-host.path}")
  #   ${pkgs.gnused}/bin/sed -i "s#@sb-sub3-pw@#$sbpw#" /etc/fstab
  #   ${pkgs.gnused}/bin/sed -i "s#@sb-sub3-user@#$sbuser#" /etc/fstab
  #   ${pkgs.gnused}/bin/sed -i "s#@sb-host@#$sbhost#" /etc/fstab
  # '';
  # age.secrets.sb-sub3-pw.file = /etc/nixos/secrets/sb-sub3-pw.age;
  # age.secrets.sb-sub3-user.file = /etc/nixos/secrets/sb-sub3-user.age;
  # age.secrets.sb-host.file = /etc/nixos/secrets/sb-host.age;

 ### SWAP ###
#  swapDevices = [
#
#    { 
#      device = "/dev/disk/by-uuid/cde28588-1474-4b9e-a614-0586e589040f";
#    }
#    {
#      device = "/swapfile";
#      size = 4096;
#    }
#  ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp12s0.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp14s0u4.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp13s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
