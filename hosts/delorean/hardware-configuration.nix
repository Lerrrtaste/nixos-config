# I modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "xhci_pci" "ahci" "usbhid" "usb_storage" "sd_mod" ];
  # boot.initrd.kernelModules = [ "ati" ];
  boot.kernelModules = [ "ati" "kvm-amd" ];
  boot.extraModulePackages = [ ];
  boot.kernelParams = [ ];

  # # Enable Vulkan
  # hardware.opengl.driSupport = true;
  # hardware.opengl.driSupport32Bit = true; # For 32 bit applications

  # LUKS
  boot.initrd.luks = {
    fido2Support = true;
    reusePassphrases = true;
  };

  # Main ssd
  boot.initrd.luks.devices."cryptroot" = {
    device = "/dev/disk/by-uuid/63d25036-4b8f-46c3-a6c4-a82dddd8f2b8";
      # fido2.passwordLess = true;
      preLVM = true;
      allowDiscards = true;
  };

  fileSystems."/boot" = {
    device = "/dev/disk/by-uuid/A2A2-741D";
    fsType = "vfat";
  };

  fileSystems."/" = {
    device = "/dev/disk/by-uuid/f5ce4bf2-95f1-4d81-a086-dad583582cac";
    fsType = "ext4";
    options = [ "noatime" "nodiratime" "discard" ];  # better for ssds (?)
  };

  #─sda1          8:1    0   500M  0 part  /mnt/boot      A2A2-741D
  #─sda2          8:2    0 232.4G  0 part                 63d25036-4b8f-46c3-a6c4-a82dddd8f2b8
  # └─cryptroot 254:1    0 232.4G  0 crypt /mnt           f5ce4bf2-95f1-4d81-a086-dad583582cac

  # Data Raid
  boot.initrd.luks.devices."cryptdata" = {
    device = "/dev/disk/by-uuid/d3e68092-af98-48a1-92b0-b1610acb22b2";
  };

  fileSystems."/media/data" = {
    device = "/dev/disk/by-uuid/6d8d3e0f-61b0-448a-8d34-eb8cc91862e2";
    fsType = "ext4";
  };

  # Data SSD
  fileSystems."/media/ssd" =
    { device = "/dev/disk/by-uuid/ec126fb7-eb60-44e3-b33e-42c98cc1b905";
      fsType = "ext4";
    };

  boot.initrd.luks.devices."cryptssd".device = "/dev/disk/by-uuid/57229b63-8308-4525-8223-58205a52cc83";

  # cruzer usb sticks
  fileSystems."/mnt/cruzer1" = {
    device = "/dev/disk/by-label/cruzer1";
    fsType = "ext4";
    options = [ "noauto" "user" "defaults" ];
  };
  fileSystems."/mnt/cruzer2" = {
    device = "/dev/disk/by-label/cruzer2";
    fsType = "ext4";
    options = [ "noauto" "user" "defaults" ];
  };
  fileSystems."/mnt/cruzer3" = {
    device = "/dev/disk/by-label/cruzer3";
    fsType = "ext4";
    options = [ "noauto" "user" "defaults" ];
  };
  fileSystems."/mnt/cruzer4" = {
    device = "/dev/disk/by-label/cruzer4";
    fsType = "ext4";
    options = [ "noauto" "user" "defaults" ];
  };

  swapDevices = [ ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp38s0u1.useDHCP = lib.mkDefault true;

  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
